//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace procluentdbfirstuygulama
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VergiSistemiEntities : DbContext
    {
        public VergiSistemiEntities()
            : base("name=VergiSistemiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bakanlık> Bakanlık { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Vatandaş> Vatandaş { get; set; }
        public virtual DbSet<Vergiler> Vergiler { get; set; }
    
        public virtual int bakanAdd(string bakanlikAdi, string daireBaskanligi, Nullable<int> ciro, string merkez)
        {
            var bakanlikAdiParameter = bakanlikAdi != null ?
                new ObjectParameter("bakanlikAdi", bakanlikAdi) :
                new ObjectParameter("bakanlikAdi", typeof(string));
    
            var daireBaskanligiParameter = daireBaskanligi != null ?
                new ObjectParameter("daireBaskanligi", daireBaskanligi) :
                new ObjectParameter("daireBaskanligi", typeof(string));
    
            var ciroParameter = ciro.HasValue ?
                new ObjectParameter("ciro", ciro) :
                new ObjectParameter("ciro", typeof(int));
    
            var merkezParameter = merkez != null ?
                new ObjectParameter("merkez", merkez) :
                new ObjectParameter("merkez", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bakanAdd", bakanlikAdiParameter, daireBaskanligiParameter, ciroParameter, merkezParameter);
        }
    
        public virtual int bakanDel(Nullable<int> bakanlikID)
        {
            var bakanlikIDParameter = bakanlikID.HasValue ?
                new ObjectParameter("bakanlikID", bakanlikID) :
                new ObjectParameter("bakanlikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bakanDel", bakanlikIDParameter);
        }
    
        public virtual ObjectResult<bakanList_Result> bakanList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bakanList_Result>("bakanList");
        }
    
        public virtual int bakanUp(Nullable<int> bakanlikID, string bakanlikAdi, string daireBaskanligi, Nullable<int> ciro, string merkez)
        {
            var bakanlikIDParameter = bakanlikID.HasValue ?
                new ObjectParameter("bakanlikID", bakanlikID) :
                new ObjectParameter("bakanlikID", typeof(int));
    
            var bakanlikAdiParameter = bakanlikAdi != null ?
                new ObjectParameter("bakanlikAdi", bakanlikAdi) :
                new ObjectParameter("bakanlikAdi", typeof(string));
    
            var daireBaskanligiParameter = daireBaskanligi != null ?
                new ObjectParameter("daireBaskanligi", daireBaskanligi) :
                new ObjectParameter("daireBaskanligi", typeof(string));
    
            var ciroParameter = ciro.HasValue ?
                new ObjectParameter("ciro", ciro) :
                new ObjectParameter("ciro", typeof(int));
    
            var merkezParameter = merkez != null ?
                new ObjectParameter("merkez", merkez) :
                new ObjectParameter("merkez", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bakanUp", bakanlikIDParameter, bakanlikAdiParameter, daireBaskanligiParameter, ciroParameter, merkezParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int vatandasAdd(Nullable<int> tc, string meslek, string adres, string telefon, string mail)
        {
            var tcParameter = tc.HasValue ?
                new ObjectParameter("tc", tc) :
                new ObjectParameter("tc", typeof(int));
    
            var meslekParameter = meslek != null ?
                new ObjectParameter("meslek", meslek) :
                new ObjectParameter("meslek", typeof(string));
    
            var adresParameter = adres != null ?
                new ObjectParameter("adres", adres) :
                new ObjectParameter("adres", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("vatandasAdd", tcParameter, meslekParameter, adresParameter, telefonParameter, mailParameter);
        }
    
        public virtual int vatandasDel(Nullable<int> kisiNo)
        {
            var kisiNoParameter = kisiNo.HasValue ?
                new ObjectParameter("kisiNo", kisiNo) :
                new ObjectParameter("kisiNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("vatandasDel", kisiNoParameter);
        }
    
        public virtual int vatandasUp(Nullable<int> kisiNo, Nullable<int> tc, string meslek, string adres, string telefon, string mail)
        {
            var kisiNoParameter = kisiNo.HasValue ?
                new ObjectParameter("kisiNo", kisiNo) :
                new ObjectParameter("kisiNo", typeof(int));
    
            var tcParameter = tc.HasValue ?
                new ObjectParameter("tc", tc) :
                new ObjectParameter("tc", typeof(int));
    
            var meslekParameter = meslek != null ?
                new ObjectParameter("meslek", meslek) :
                new ObjectParameter("meslek", typeof(string));
    
            var adresParameter = adres != null ?
                new ObjectParameter("adres", adres) :
                new ObjectParameter("adres", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("telefon", telefon) :
                new ObjectParameter("telefon", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("mail", mail) :
                new ObjectParameter("mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("vatandasUp", kisiNoParameter, tcParameter, meslekParameter, adresParameter, telefonParameter, mailParameter);
        }
    
        public virtual int vergiAdd(string vergiAdi, string vergiTipi, Nullable<int> tutar, Nullable<int> faiz)
        {
            var vergiAdiParameter = vergiAdi != null ?
                new ObjectParameter("vergiAdi", vergiAdi) :
                new ObjectParameter("vergiAdi", typeof(string));
    
            var vergiTipiParameter = vergiTipi != null ?
                new ObjectParameter("vergiTipi", vergiTipi) :
                new ObjectParameter("vergiTipi", typeof(string));
    
            var tutarParameter = tutar.HasValue ?
                new ObjectParameter("tutar", tutar) :
                new ObjectParameter("tutar", typeof(int));
    
            var faizParameter = faiz.HasValue ?
                new ObjectParameter("faiz", faiz) :
                new ObjectParameter("faiz", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("vergiAdd", vergiAdiParameter, vergiTipiParameter, tutarParameter, faizParameter);
        }
    
        public virtual int vergiDel(Nullable<int> vergiID)
        {
            var vergiIDParameter = vergiID.HasValue ?
                new ObjectParameter("vergiID", vergiID) :
                new ObjectParameter("vergiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("vergiDel", vergiIDParameter);
        }
    
        public virtual int vergiUp(Nullable<int> vergiID, string vergiAdi, string vergiTipi, Nullable<int> tutar, Nullable<int> faiz)
        {
            var vergiIDParameter = vergiID.HasValue ?
                new ObjectParameter("vergiID", vergiID) :
                new ObjectParameter("vergiID", typeof(int));
    
            var vergiAdiParameter = vergiAdi != null ?
                new ObjectParameter("vergiAdi", vergiAdi) :
                new ObjectParameter("vergiAdi", typeof(string));
    
            var vergiTipiParameter = vergiTipi != null ?
                new ObjectParameter("vergiTipi", vergiTipi) :
                new ObjectParameter("vergiTipi", typeof(string));
    
            var tutarParameter = tutar.HasValue ?
                new ObjectParameter("tutar", tutar) :
                new ObjectParameter("tutar", typeof(int));
    
            var faizParameter = faiz.HasValue ?
                new ObjectParameter("faiz", faiz) :
                new ObjectParameter("faiz", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("vergiUp", vergiIDParameter, vergiAdiParameter, vergiTipiParameter, tutarParameter, faizParameter);
        }
    
        public virtual ObjectResult<vatanList_Result> vatanList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vatanList_Result>("vatanList");
        }
    
        public virtual ObjectResult<vergiList_Result> vergiList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vergiList_Result>("vergiList");
        }
    
        public virtual ObjectResult<bakanliksirala_Result> bakanliksirala(string bakanlikAdi)
        {
            var bakanlikAdiParameter = bakanlikAdi != null ?
                new ObjectParameter("bakanlikAdi", bakanlikAdi) :
                new ObjectParameter("bakanlikAdi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bakanliksirala_Result>("bakanliksirala", bakanlikAdiParameter);
        }
    
        public virtual ObjectResult<dairesirala_Result> dairesirala(string daireBaskanligi)
        {
            var daireBaskanligiParameter = daireBaskanligi != null ?
                new ObjectParameter("daireBaskanligi", daireBaskanligi) :
                new ObjectParameter("daireBaskanligi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dairesirala_Result>("dairesirala", daireBaskanligiParameter);
        }
    
        public virtual ObjectResult<tipsorgu_Result> tipsorgu(string vergiTipi)
        {
            var vergiTipiParameter = vergiTipi != null ?
                new ObjectParameter("vergiTipi", vergiTipi) :
                new ObjectParameter("vergiTipi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tipsorgu_Result>("tipsorgu", vergiTipiParameter);
        }
    
        public virtual ObjectResult<vergiTutar_Result> vergiTutar(Nullable<int> tutar)
        {
            var tutarParameter = tutar.HasValue ?
                new ObjectParameter("tutar", tutar) :
                new ObjectParameter("tutar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vergiTutar_Result>("vergiTutar", tutarParameter);
        }
    
        public virtual ObjectResult<ıdsorgu_Result> ıdsorgu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ıdsorgu_Result>("ıdsorgu");
        }
    
        public virtual ObjectResult<kisisorgu_Result> kisisorgu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kisisorgu_Result>("kisisorgu");
        }
    }
}
