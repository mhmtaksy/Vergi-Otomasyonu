<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>